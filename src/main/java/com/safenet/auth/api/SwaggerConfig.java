/**
 * Copyright 2023 safenet-auth-api
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Configures the OpenAPI documentation using springdoc-openapi-ui.
 * 
 * Defines the API information such as the title, description, and version.
 * 
 * Also configures the Swagger UI and sets up the security scheme for API key
 * header authentication.
 *
 * @author Cina Shaykhian
 * @contact hello@onewelco.me
 */
package com.safenet.auth.api;

import java.util.Arrays;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.ExternalDocumentation;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.tags.Tag;

@Configuration
public class SwaggerConfig {
	 
	/**
     * Configures and returns the OpenAPI instance for the Spring application using the Springdoc OpenAPI library.
	 * @return the OpenAPI instance
	 */
	
	@Bean
	OpenAPI springOpenApiConfig() {
		return new OpenAPI()
    		  .components(new Components()
    				   .addSecuritySchemes("X-API-Key", new SecurityScheme()
                                .type(SecurityScheme.Type.APIKEY)
                                .description("##### To access the endpoints listed on this page, the client key **must always be included** in the request headers using the `X-API-Key` field.")
                                .in(SecurityScheme.In.HEADER)
                                .name("X-API-Key")
                        ))
    		  .security(Arrays.asList(
                        new SecurityRequirement().addList("X-API-Key")))
    		  .tags(Arrays.asList(new Tag().name("Authentication").description("APIs for user authentication"),
    				  			  new Tag().name("Grid Image").description("APIs for authentication challenges related to GrIDsure tokens")))
    		  .addServersItem(serverInfo())
              .info(new Info().title("SafeNet RESTful Authentication Gateway")
              .description("This is a demo project to authenticate users against the SafeNet authentication platform using REST API endpoints.")
              .version("v0.0.3")
              .contact(new Contact().email("hello@onewelco.me"))
              .license(new License().name("Apache 2.0").url("http://springdoc.org")))
              .externalDocs(new ExternalDocumentation()
              .description("SafeNet Authentication API Documentation (Git)")
              .url("https://www.github.com/thalesdemo/safenet-auth-api/docs"));
	}
	
	
	/**
     * Creates a new instance of the Server class with an empty URL and returns it. This is used to provide server information
	 * to the OpenAPI documentation generated by the SpringDoc library.
	 * @return an instance of the Server class with an empty URL
	 */
	
	private Server serverInfo() {
		return new Server().url("");
	}

}